@page "/Menu"
@using Client.Data
@using Client.Models
@using System.Text.Json
@using System.Collections.ObjectModel
@inject ITest tst
<h3>Menu</h3>
@if (men == null) {
    <p>
        <em>Loading...</em>
    </p>
}
else if (!men.Any()) {
    <p>
        <em>No ToDo items exist. Please add some.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr><th>*</th>
            <th>items</th>
            <th>price</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in men)
        {
            <tr>
                <td>@item.number</td>
                <td>@item.food</td>
                <td>@item.price DKK</td>
                <!--<td>/td>-->

                <td>
                </td>
            </tr>
        }
        </tbody>

    </table>
    
    <button class="btn btn-primary" @onclick="SendOrder">send to server</button>
    
    
}

@code {
    private static string listuri = "http://localhost:8080/menu/1";
    private string x,y,z;
    static MenuObject onitem = new MenuObject();
    static IList<MenuObject> men = new List<MenuObject>();
    //static IList<MenuObject> menu = new List<MenuObject>();
    static IList<OrderObject> orders = new Collection<OrderObject>();
    OrderObject o = new OrderObject();
    //private Test test = new Test();
    //private Test alltests;
    //private int currentCount = 0;
    
    //OnInitializedAsync gør så metoden automatisk bliver kaldt, når siden er laoded
    protected override async Task OnInitializedAsync()
    {
        //Console.WriteLine(tst.GetListAsync("1"));
        for (int x = 1; x <= 5; x++)
        {
            if (men.Count == 0)
            {
                men.Add(await tst.GetMenuAsync(x));
            }
            else if (men.Count > 0)
            {
                men.Clear();
                men.Add(await tst.GetMenuAsync(1));
                men.Add(await tst.GetMenuAsync(2));
                men.Add(await tst.GetMenuAsync(3));
                men.Add(await tst.GetMenuAsync(4));
                men.Add(await tst.GetMenuAsync(5));
            }
            
        }
        HttpClient client = new HttpClient();
        Task<string> stringAsync = client.GetStringAsync(listuri);
        string message = await stringAsync;
        MenuObject result = JsonSerializer.Deserialize<MenuObject>(message);
        //onitem.food = result;
        //onitem.price = 500;
        
       // men.Add(onitem);
        //int a = 0;
        //Console.WriteLine(result.food);

    //alltests = tst.GetListAsync("1");
        //todos = allTodos;
        //todos = TodoData.GetTodos();
    }

    public async Task SendOrder()
    {
        o.ordernumber = 1;
        o.price = 112;
        o.items = "Rød grød med fløde";
        o.adr = "Oktobervej 30, 8210 århus v";
        orders.Add(o);

        for (int x = 0; x < orders.Count; x++)
        {
            await tst.SendOrderAsync(o);
        }
        orders.Clear();
    }




    /*public static async Task<IList<MenuObject>> GetListAsync()
    {
        return null;
    }*/
}
